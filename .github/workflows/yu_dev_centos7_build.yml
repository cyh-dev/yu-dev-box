name: Docker Build and Push yu-dev-centos7

on:
  workflow_dispatch: #github页面手动触发
  push:
    tags:
      - "yu-dev-centos7-*"
env:
  IMAGE_NAME: yu-dev-centos7 #这是您的镜像名

jobs:
  get-tags:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    outputs:
      tags: ${{ steps.output-id.outputs.v }}
    steps:
      - uses: actions/checkout@v3
      - id: output-id
        run: |
          VERSION=$(date +%s)
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/yu-dev-centos7-}
          fi
          echo "v=${VERSION}" >> $GITHUB_OUTPUT
  push-docker-hub:
    needs: get-tags
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
      - uses: actions/checkout@v3
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build && Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/yu-dev-centos7.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

#  push-ghcr:
#    needs: get-tags
#    runs-on: ubuntu-latest
#    env:
#      TZ: Asia/Shanghai
#      REGISTRY: ghcr.io
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login
#        uses: docker/login-action@v1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build && Push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
#            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
#  push-docker-pkg-github:
#    needs: get-tags
#    runs-on: ubuntu-latest
#    env:
#      REGISTRY: docker.pkg.github.com
#      TZ: Asia/Shanghai
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login
#        uses: docker/login-action@v1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build && Push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
#            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest
#      - name: Delete Package
#        uses: actions/delete-package-versions@v1
#        with:
#          package-name: ${{ env.IMAGE_NAME }}
#          num-old-versions-to-delete: 1 #删除最旧的一个包
